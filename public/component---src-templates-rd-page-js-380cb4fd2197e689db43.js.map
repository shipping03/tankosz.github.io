{"version":3,"file":"component---src-templates-rd-page-js-380cb4fd2197e689db43.js","mappings":"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","sources":["webpack://gatsby-starter-netlify-cms/./src/components/Features.js","webpack://gatsby-starter-netlify-cms/./src/components/FullWidthImage.js","webpack://gatsby-starter-netlify-cms/./src/components/PreviewCompatibleImage.js","webpack://gatsby-starter-netlify-cms/./src/components/Pricing.js","webpack://gatsby-starter-netlify-cms/./node_modules/uuid/dist/esm-browser/rng.js","webpack://gatsby-starter-netlify-cms/./node_modules/uuid/dist/esm-browser/regex.js","webpack://gatsby-starter-netlify-cms/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://gatsby-starter-netlify-cms/./node_modules/uuid/dist/esm-browser/validate.js","webpack://gatsby-starter-netlify-cms/./node_modules/uuid/dist/esm-browser/v4.js","webpack://gatsby-starter-netlify-cms/./src/components/Testimonials.js","webpack://gatsby-starter-netlify-cms/./src/templates/rd-page.js"],"sourcesContent":["import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PreviewCompatibleImage from \"../components/PreviewCompatibleImage\";\n\nconst FeatureGrid = ({ gridItems }) => (\n  <div className=\"columns is-multiline\">\n    {gridItems.map((item) => (\n      <div key={item.text} className=\"column is-6\">\n        <section className=\"section\">\n          <div className=\"has-text-centered\">\n            <div\n              style={{\n                width: \"240px\",\n                display: \"inline-block\",\n              }}\n            >\n              <PreviewCompatibleImage imageInfo={item} />\n            </div>\n          </div>\n          <p>{item.text}</p>\n        </section>\n      </div>\n    ))}\n  </div>\n);\n\nFeatureGrid.propTypes = {\n  gridItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n      text: PropTypes.string,\n    })\n  ),\n};\n\nexport default FeatureGrid;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nexport default function FullWidthImage(props) {\n  const {\n    height = 400,\n    img,\n    title,\n    subheading,\n    imgPosition = \"top left\",\n  } = props;\n\n  return (\n    <React.Fragment>\n      <div\n        className=\"margin-top-0\"\n        style={{\n          display: \"grid\",\n          alignItems: \"center\",\n        }}\n      >\n        {img?.url ? (\n          <img\n            src={img}\n            objectFit={\"cover\"}\n            objectPosition={imgPosition}\n            style={{\n              gridArea: \"1/1\",\n              // You can set a maximum height for the image, if you wish.\n              height: height,\n              width: \"100%\",\n            }}\n            // You can optionally force an aspect ratio for the generated image\n            aspectratio={3 / 1}\n            // This is a presentational image, so the alt should be an empty string\n            alt=\"\"\n            formats={[\"auto\", \"webp\", \"avif\"]}\n          />\n        ) : (\n          <GatsbyImage\n            image={img}\n            objectFit={\"cover\"}\n            objectPosition={imgPosition}\n            style={{\n              gridArea: \"1/1\",\n              // You can set a maximum height for the image, if you wish.\n              maxHeight: height,\n            }}\n            layout=\"fullWidth\"\n            // You can optionally force an aspect ratio for the generated image\n            aspectratio={3 / 1}\n            // This is a presentational image, so the alt should be an empty string\n            alt=\"\"\n            formats={[\"auto\", \"webp\", \"avif\"]}\n          />\n        )}\n        {(title || subheading) && (\n          <div\n            style={{\n              // By using the same grid area for both, they are stacked on top of each other\n              gridArea: \"1/1\",\n              position: \"relative\",\n              // This centers the other elements inside the hero component\n              placeItems: \"center\",\n              display: \"grid\",\n            }}\n          >\n            {/* Any content here will be centered in the component */}\n            {title && (\n              <h1\n                className=\"has-text-weight-bold is-size-3-mobile is-size-2-tablet is-size-1-widescreen\"\n                style={{\n                  boxShadow:\n                    \"rgb(255, 68, 0) 0.5rem 0px 0px, rgb(255, 68, 0) -0.5rem 0px 0px\",\n                  backgroundColor: \"rgb(255, 68, 0)\",\n                  color: \"white\",\n                  lineHeight: \"1\",\n                  padding: \"0.25em\",\n                }}\n              >\n                {title}\n              </h1>\n            )}\n            {subheading && (\n              <h3\n                className=\"has-text-weight-bold is-size-5-mobile is-size-5-tablet is-size-4-widescreen\"\n                style={{\n                  boxShadow:\n                    \"rgb(255, 68, 0) 0.5rem 0px 0px, rgb(255, 68, 0) -0.5rem 0px 0px\",\n                  backgroundColor: \"rgb(255, 68, 0)\",\n                  color: \"white\",\n                  lineHeight: \"1\",\n                  padding: \"0.25rem\",\n                  marginTop: \"0.5rem\",\n                }}\n              >\n                {subheading}\n              </h3>\n            )}\n          </div>\n        )}\n      </div>\n    </React.Fragment>\n  );\n}\n\nFullWidthImage.propTypes = {\n  img: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.string,\n  height: PropTypes.number,\n  subheading: PropTypes.string,\n};\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nconst PreviewCompatibleImage = ({ imageInfo }) => {\n  const imageStyle = { borderRadius: \"5px\" };\n\n  const { alt = \"\", childImageSharp, image } = imageInfo;\n\n  if (!!image && !!image.childImageSharp) {\n    return (\n      <GatsbyImage\n        image={image.childImageSharp.gatsbyImageData}\n        style={imageStyle}\n        alt={alt}\n      />\n    );\n  } else if (!!childImageSharp) {\n    return (\n      <GatsbyImage\n        image={childImageSharp.gatsbyImageData}\n        style={imageStyle}\n        alt={alt}\n      />\n    );\n    // for Netlify CMS \n  } else if (image) {\n    return <img style={{imageStyle}} src={image} alt={alt} />;\n  } else {\n    return null\n  }\n};\n\nPreviewCompatibleImage.propTypes = {\n  imageInfo: PropTypes.shape({\n    alt: PropTypes.string,\n    childImageSharp: PropTypes.object,\n    image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n    style: PropTypes.object,\n  }).isRequired,\n};\n\nexport default PreviewCompatibleImage;\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Pricing = ({ data }) => (\n  <div className=\"columns\">\n    {data.map((price) => (\n      <div key={price.plan} className=\"column\">\n        <section className=\"section\">\n          <h4 className=\"has-text-centered has-text-weight-semibold\">\n            {price.plan}\n          </h4>\n          <h2 className=\"is-size-1 has-text-weight-bold has-text-primary has-text-centered\">\n            ${price.price}\n          </h2>\n          <p className=\"has-text-weight-semibold\">{price.description}</p>\n          <ul>\n            {price.items.map((item) => (\n              <li key={item} className=\"is-size-5\">\n                {item}\n              </li>\n            ))}\n          </ul>\n        </section>\n      </div>\n    ))}\n  </div>\n);\n\nPricing.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      plan: PropTypes.string,\n      price: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      description: PropTypes.string,\n      items: PropTypes.array,\n    })\n  ),\n};\n\nexport default Pricing;\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { v4 } from \"uuid\";\n\nconst Testimonials = ({ testimonials }) => (\n  <div>\n    {testimonials.map((testimonial) => (\n      <article key={v4()} className=\"message\">\n        <div className=\"message-body\">\n          {testimonial.quote}\n          <br />\n          <cite> – {testimonial.author}</cite>\n        </div>\n      </article>\n    ))}\n  </div>\n);\n\nTestimonials.propTypes = {\n  testimonials: PropTypes.arrayOf(\n    PropTypes.shape({\n      quote: PropTypes.string,\n      author: PropTypes.string,\n    })\n  ),\n};\n\nexport default Testimonials;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql } from \"gatsby\";\r\nimport { getImage } from \"gatsby-plugin-image\";\r\nimport Layout from \"../components/Layout\";\r\nimport Features from \"../components/Features\";\r\nimport Testimonials from \"../components/Testimonials\";\r\nimport Pricing from \"../components/Pricing\";\r\nimport PreviewCompatibleImage from \"../components/PreviewCompatibleImage\";\r\nimport FullWidthImage from \"../components/FullWidthImage\";\r\n\r\n// eslint-disable-next-line\r\nexport const RdPageTemplate = ({\r\n                                        image,\r\n                                        title,\r\n                                        heading,\r\n                                        description,\r\n                                        intro,\r\n                                        main,\r\n                                        testimonials,\r\n                                        fullImage,\r\n                                        pricing,\r\n                                    }) => {\r\n    const heroImage = getImage(image) || image;\r\n    const fullWidthImage = getImage(fullImage) || fullImage;\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <FullWidthImage img={heroImage} title={title} />\r\n            <section className=\"section section--gradient\">\r\n                <div className=\"container\">\r\n                    <div className=\"section\">\r\n                        <div className=\"columns\">\r\n                            <div className=\"column is-7 is-offset-1\">\r\n                                <h3 className=\"has-text-weight-semibold is-size-2\">\r\n                                    {heading}\r\n                                </h3>\r\n                                <p>{description}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"columns\">\r\n                            <div className=\"column is-10 is-offset-1\">\r\n                                <Features gridItems={intro.blurbs} />\r\n                                <div className=\"columns\">\r\n                                    <div className=\"column is-7\">\r\n                                        <h3 className=\"has-text-weight-semibold is-size-3\">\r\n                                            {main.heading}\r\n                                        </h3>\r\n                                        <p>{main.description}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"tile is-ancestor\">\r\n                                    <div className=\"tile is-vertical\">\r\n                                        <div className=\"tile\">\r\n                                            <div className=\"tile is-parent is-vertical\">\r\n                                                <article className=\"tile is-child\">\r\n                                                    <PreviewCompatibleImage imageInfo={main.image1} />\r\n                                                </article>\r\n                                            </div>\r\n                                            <div className=\"tile is-parent\">\r\n                                                <article className=\"tile is-child\">\r\n                                                    <PreviewCompatibleImage imageInfo={main.image2} />\r\n                                                </article>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"tile is-parent\">\r\n                                            <article className=\"tile is-child\">\r\n                                                <PreviewCompatibleImage imageInfo={main.image3} />\r\n                                            </article>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <Testimonials testimonials={testimonials} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <FullWidthImage img={fullWidthImage} imgPosition={\"bottom\"} />\r\n            <section className=\"section section--gradient\">\r\n                <div className=\"container\">\r\n                    <div className=\"section\">\r\n                        <div className=\"columns\">\r\n                            <div className=\"column is-10 is-offset-1\">\r\n                                <h2 className=\"has-text-weight-semibold is-size-2\">\r\n                                    {pricing.heading}\r\n                                </h2>\r\n                                <p className=\"is-size-5\">{pricing.description}</p>\r\n                                <Pricing data={pricing.plans} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nRdPageTemplate.propTypes = {\r\n    image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n    title: PropTypes.string,\r\n    heading: PropTypes.string,\r\n    description: PropTypes.string,\r\n    intro: PropTypes.shape({\r\n        blurbs: PropTypes.array,\r\n    }),\r\n    main: PropTypes.shape({\r\n        heading: PropTypes.string,\r\n        description: PropTypes.string,\r\n        image1: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n        image2: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n        image3: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n    }),\r\n    testimonials: PropTypes.array,\r\n    fullImage: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n    pricing: PropTypes.shape({\r\n        heading: PropTypes.string,\r\n        description: PropTypes.string,\r\n        plans: PropTypes.array,\r\n    }),\r\n};\r\n\r\nconst RdPage = ({ data }) => {\r\n    const { frontmatter } = data.markdownRemark;\r\n\r\n    return (\r\n        <Layout>\r\n            <RdPageTemplate\r\n                image={frontmatter.image}\r\n                title={frontmatter.title}\r\n                heading={frontmatter.heading}\r\n                description={frontmatter.description}\r\n                intro={frontmatter.intro}\r\n                main={frontmatter.main}\r\n                testimonials={frontmatter.testimonials}\r\n                fullImage={frontmatter.full_image}\r\n                pricing={frontmatter.pricing}\r\n            />\r\n        </Layout>\r\n    );\r\n};\r\n\r\nRdPage.propTypes = {\r\n    data: PropTypes.shape({\r\n        markdownRemark: PropTypes.shape({\r\n            frontmatter: PropTypes.object,\r\n        }),\r\n    }),\r\n};\r\n\r\nexport default RdPage;\r\n\r\nexport const RdPageQuery = graphql`\r\n  query RdPage($id: String!) {\r\n    markdownRemark(id: { eq: $id }) {\r\n      frontmatter {\r\n        title\r\n        image {\r\n          childImageSharp {\r\n            gatsbyImageData(quality: 100, layout: FULL_WIDTH)\r\n          }\r\n        }\r\n        heading\r\n        description\r\n        intro {\r\n          blurbs {\r\n            image {\r\n              childImageSharp {\r\n                gatsbyImageData(width: 240, quality: 64, layout: CONSTRAINED)\r\n              }\r\n            }\r\n            text\r\n          }\r\n          heading\r\n          description\r\n        }\r\n        main {\r\n          heading\r\n          description\r\n          image1 {\r\n            alt\r\n            image {\r\n              childImageSharp {\r\n                gatsbyImageData(width: 526, quality: 92, layout: CONSTRAINED)\r\n              }\r\n            }\r\n          }\r\n          image2 {\r\n            alt\r\n            image {\r\n              childImageSharp {\r\n                gatsbyImageData(width: 526, quality: 92, layout: CONSTRAINED)\r\n              }\r\n            }\r\n          }\r\n          image3 {\r\n            alt\r\n            image {\r\n              childImageSharp {\r\n                gatsbyImageData(quality: 72, layout: FULL_WIDTH)\r\n              }\r\n            }\r\n          }\r\n        }\r\n        testimonials {\r\n          author\r\n          quote\r\n        }\r\n        full_image {\r\n          childImageSharp {\r\n            gatsbyImageData(quality: 100, layout: FULL_WIDTH)\r\n          }\r\n        }\r\n        pricing {\r\n          heading\r\n          description\r\n          plans {\r\n            description\r\n            items\r\n            plan\r\n            price\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;"],"names":["gridItems","className","map","item","key","text","style","width","display","imageInfo","FullWidthImage","props","height","img","title","subheading","imgPosition","alignItems","url","src","objectFit","objectPosition","gridArea","aspectratio","alt","formats","G","image","maxHeight","layout","position","placeItems","boxShadow","backgroundColor","color","lineHeight","padding","marginTop","imageStyle","borderRadius","childImageSharp","gatsbyImageData","data","price","plan","description","items","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","byteToHex","i","push","toString","substr","arr","offset","arguments","length","undefined","toLowerCase","TypeError","options","buf","rnds","random","testimonials","testimonial","v4","quote","author","RdPageTemplate","heading","intro","main","fullImage","pricing","heroImage","getImage","fullWidthImage","blurbs","image1","image2","image3","plans","frontmatter","markdownRemark","full_image"],"sourceRoot":""}